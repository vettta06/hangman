package database;
import java.util.*;

public class WordBase {

    public static Map<String, Map<String, List<String>>> getWordsByCategory() {
        Map<String, Map<String, List<String>>> words = new HashMap<>();

        addWords(words, "разработка", "easy",
                "переменная", "цикл", "функция", "строка", "список", "словарь", "код", "ошибка", "байт");
        addWords(words, "разработка", "medium",
                "класс", "объект", "наследование", "метод", "библиотека", "декоратор", "исключение", "интерфейс", "рекурсия");
        addWords(words, "разработка", "hard",
                "метакласс", "асинхронность", "паттерн", "фреймворк", "сериализация", "параллелизм", "аннотация");

        addWords(words, "аналитика", "easy",
                "данные", "таблица", "график", "сумма", "среднее", "фильтр", "сортировка", "выборка", "поле", "запрос");
        addWords(words, "аналитика", "medium",
                "SQL", "ETL", "агрегация", "визуализация", "pivot", "датафрейм", "индекс", "аналитика", "отчёт", "метрика");
        addWords(words, "аналитика", "hard",
                "OLAP", "data warehouse", "A/B тест", "сегментация", "прогнозирование", "корреляция", "аномалия", "квантиль", "нормализация");

        addWords(words, "мобильная разработка", "easy",
                "приложение", "экран", "кнопка", "текст", "изображение", "уведомление", "пользователь", "интерфейс", "меню");
        addWords(words, "мобильная разработка", "medium",
                "API", "REST", "JSON", "XML", "сервис", "асинхронность", "хранение", "локализация", "разрешения");
        addWords(words, "мобильная разработка", "hard",
                "нативный код", "React Native", "Xcode", "Android Studio", "UI/UX", "push-уведомление", "background task", "синхронизация");

        return words;
    }


    private static void addWords(Map<String, Map<String, List<String>>> words,
                                 String category, String difficulty, String... wordArray) {
        words
                .computeIfAbsent(category, k -> new HashMap<>())
                .computeIfAbsent(difficulty, d -> new ArrayList<>())
                .addAll(Arrays.asList(wordArray));
    }


    public static Map<String, String> getHints() {
        Map<String, String> hints = new HashMap<>();

        hints.put("переменная", "область памяти, которая хранит информацию");
        hints.put("цикл", "повторяет действие, пока условие истинно");
        hints.put("функция", "блок кода, который можно вызывать по имени");
        hints.put("строка", "последовательность символов в кавычках");
        hints.put("список", "упорядоченный набор элементов");
        hints.put("словарь", "хранит пары ключ-значение");
        hints.put("код", "набор инструкций, написанных на языке программирования, который выполняется компьютером");
        hints.put("ошибка", "неожиданное поведение программы, вызванное недочётом в коде");
        hints.put("байт", "единица хранения данных");

        hints.put("класс", "шаблон для создания объектов");
        hints.put("объект", "экземпляр класса");
        hints.put("наследование", "когда один класс берёт свойства другого");
        hints.put("метод", "функция внутри класса");
        hints.put("библиотека", "собрание готовых функций");
        hints.put("декоратор", "особая функция, которая меняет поведение другой функции");
        hints.put("исключение", "объект, который прерывает нормальный ход программы при возникновении ошибки");
        hints.put("интерфейс", "контракт, который говорит: 'ты обязан реализовать эти методы'");
        hints.put("рекурсия", "функция, которая вызывает саму себя");

        hints.put("метакласс", "класс, который создаёт другие классы");
        hints.put("асинхронность", "делаешь много дел одновременно, не ждёшь, пока одно закончится");
        hints.put("паттерн", "шаблон решения типовой задачи");
        hints.put("фреймворк", "готовый каркас для разработки, который определяет структуру приложения");
        hints.put("сериализация", "превращение объекта в строку, чтобы сохранить или отправить");
        hints.put("параллелизм", "одновременное выполнение нескольких потоков или процессов");
        hints.put("аннотация", "подсказка типа для переменной");

        hints.put("данные", "факты, цифры, информация, которую можно анализировать");
        hints.put("таблица", "структура данных в виде строк и столбцов");
        hints.put("график", "визуальное представление данных, например линия или столбцы");
        hints.put("сумма", "результат сложения чисел");
        hints.put("среднее", "математическое среднее значение набора чисел");
        hints.put("фильтр", "правило, по которому выбираются нужные данные");
        hints.put("сортировка", "упорядочивание данных по возрастанию или убыванию");
        hints.put("выборка", "извлечение части данных по заданным условиям");
        hints.put("поле", "столбец в таблице, представляющий один тип данных");
        hints.put("запрос", "команда для получения данных из базы, например SQL SELECT");

        hints.put("SQL", "язык для запросов к базам данных");
        hints.put("ETL", "выгрузка, преобразование и загрузка данных");
        hints.put("агрегация", "объединение данных в группы для анализа");
        hints.put("визуализация", "представление данных в виде графиков и диаграмм");
        hints.put("pivot", "перестройка данных для удобного анализа");
        hints.put("датафрейм", "таблица данных в библиотеке pandas");
        hints.put("индекс", "быстрый способ найти строку в таблице");
        hints.put("аналитика", "процесс анализа данных для получения выводов, выявления тенденций и поддержки принятия решений");
        hints.put("отчёт", "документ с результатами анализа");
        hints.put("метрика", "числовая характеристика, например конверсия или время ответа");

        hints.put("OLAP", "технология для многомерного анализа данных");
        hints.put("data warehouse", "центральное хранилище для аналитических данных");
        hints.put("A/B тест", "сравнение двух версий сайта, чтобы узнать, какая лучше");
        hints.put("сегментация", "разделение пользователей на группы по характеристикам");
        hints.put("прогнозирование", "предсказание будущих значений на основе прошлых данных");
        hints.put("корреляция", "статистическая мера, показывающая, как изменения одной переменной связаны с изменениями другой");
        hints.put("аномалия", "необычное значение, которое выбивается из общего тренда");
        hints.put("квантиль", "значение, ниже которого находится определённый процент данных");
        hints.put("нормализация", "приведение данных к единому масштабу для анализа");

        hints.put("приложение", "программа, установленная на телефон");
        hints.put("экран", "часть интерфейса, которую видит пользователь");
        hints.put("кнопка", "элемент, по которому пользователь нажимает для действия");
        hints.put("текст", "информация, отображаемая пользователю в виде строки");
        hints.put("изображение", "графический элемент, например фото или иконка");
        hints.put("уведомление", "сообщение, которое приходит пользователю вне приложения");
        hints.put("пользователь", "человек, который использует приложение");
        hints.put("интерфейс", "то, как пользователь взаимодействует с приложением");
        hints.put("меню", "список команд или действий, доступных пользователю");

        hints.put("API", "интерфейс для общения с сервером");
        hints.put("REST", "стандартный способ передачи данных через HTTP");
        hints.put("JSON", "формат данных, который легко читает и Python, и телефон");
        hints.put("XML", "старый формат данных, часто используется в Android");
        hints.put("сервис", "компонент приложения, который работает в фоне");
        hints.put("асинхронность", "выполнение операций без блокировки основного потока");
        hints.put("хранение", "сохранение данных на устройстве, например в файле или БД");
        hints.put("локализация", "адаптация приложения под язык и культуру пользователя");
        hints.put("разрешения", "права, которые приложение запрашивает у пользователя");

        hints.put("нативный код", "код, написанный специально для одной ОС");
        hints.put("React Native", "фреймворк от Facebook, использующий JavaScript");
        hints.put("Xcode", "инструмент Apple для разработки iOS-приложений");
        hints.put("Android Studio", "официальная IDE для Android");
        hints.put("UI/UX", "дизайн интерфейса и пользовательского опыта");
        hints.put("push-уведомление", "уведомление, которое приходит даже когда приложение закрыто");
        hints.put("background task", "задача, выполняющаяся в фоне, например синхронизация");
        hints.put("синхронизация", "обмен данными между устройством и сервером");

        return hints;
    }
}